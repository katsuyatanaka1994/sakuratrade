name: docsync-e2e
on:
  workflow_run:
    workflows: ["docsync-check"]
    types: [completed]

permissions:
  contents: read
  actions: write
  pull-requests: write
  issues: write

concurrency:
  group: docsync-${{ github.event.workflow_run.head_branch || github.ref }}
  cancel-in-progress: true

jobs:
  e2e:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.event == 'pull_request' }}
    env:
      ART_URL: ${{ github.event.workflow_run.artifacts_url }}
      PR_NUMBER: ${{ github.event.workflow_run.pull_requests[0].number }}
      HEAD_BRANCH: ${{ github.event.workflow_run.head_branch }}
    steps:
      - name: Fetch docsync-check artifact
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          curl -s -H "Authorization: Bearer $GH_TOKEN" -H "Accept: application/vnd.github+json" "$ART_URL" > artifacts.json
          id=$(jq -r '.artifacts[] | select(.name=="doc_sync_plan") | .id' artifacts.json || true)
          if [ -z "$id" ] || [ "$id" = "null" ]; then
            echo "EQUAL=true" >> $GITHUB_ENV
            exit 0
          fi
          curl -sL -H "Authorization: Bearer $GH_TOKEN" -H "Accept: application/vnd.github+json" \
            "$GITHUB_API_URL/repos/${{ github.repository }}/actions/artifacts/$id/zip" -o artifact.zip
          unzip -o artifact.zip
          echo "EQUAL=$(jq -r .equal doc_sync_plan.json)" >> $GITHUB_ENV

      - name: Add label when drift
        if: env.EQUAL == 'false' && env.PR_NUMBER
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const issue_number = Number(process.env.PR_NUMBER);
            try {
              await github.rest.issues.addLabels({owner, repo, issue_number, labels: ["docsync:needs-apply"]});
            } catch (e) {}

      - name: Dispatch docsync-apply on head branch
        if: env.EQUAL == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            await github.rest.actions.createWorkflowDispatch({
              owner, repo,
              workflow_id: "docsync-apply.yml",
              ref: process.env.HEAD_BRANCH
            });

      - name: Sticky guide comment
        if: env.PR_NUMBER
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const issue_number = Number(process.env.PR_NUMBER);
            const header = "### ðŸ”„ DocSync E2E";
            const body = (process.env.EQUAL === 'false')
              ? `${header}\n\nDrift detected. I dispatched **docsync-apply** on \`${process.env.HEAD_BRANCH}\` to open a Draft PR for \`docs/specs/openapi.yaml\`.\nAfter merging that PR, re-run checks to turn green âœ…`
              : `${header}\n\nNo drift. All good âœ…`;
            const { data: comments } = await github.rest.issues.listComments({owner, repo, issue_number, per_page: 100});
            const prev = comments.find(c => c.body && c.body.startsWith(header));
            if (prev) {
              await github.rest.issues.updateComment({owner, repo, comment_id: prev.id, body});
            } else {
              await github.rest.issues.createComment({owner, repo, issue_number, body});
            }

      - name: Remove label when clean
        if: env.EQUAL == 'true' && env.PR_NUMBER
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const issue_number = Number(process.env.PR_NUMBER);
            try {
              await github.rest.issues.removeLabel({owner, repo, issue_number, name: "docsync:needs-apply"});
            } catch (e) {}
