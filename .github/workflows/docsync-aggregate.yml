name: DocSync Aggregate
on:
  workflow_run:
    workflows: ["docsync-check"]
    types: [completed]

permissions:
  contents: write
  pull-requests: write
  actions: read

concurrency:
  group: docsync-${{ github.event.workflow_run.head_branch || github.ref }}
  cancel-in-progress: true

jobs:
  append:
    # success/failure のときだけ実行（skipped/cancelled を除外）
    if: ${{ contains(fromJson('["success","failure"]'), github.event.workflow_run.conclusion) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Download docsync artifacts from triggering run
        uses: actions/download-artifact@v4
        with:
          name: docsync-artifacts
          run-id: ${{ github.event.workflow_run.id }}
          path: artifacts
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check artifacts and expose has_plan
        id: artifacts
        run: |
          if [ -f artifacts/doc_sync_plan.json ]; then
            echo "has_plan=true" >> "$GITHUB_OUTPUT"
          else
            echo "::warning::missing doc_sync_plan.json (docsync-check likely skipped)"
            echo "has_plan=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Ensure report.md exists with header
        if: ${{ steps.artifacts.outputs.has_plan == 'true' }}
        run: |
          mkdir -p docs/agile
          if [ ! -f docs/agile/report.md ]; then
            echo "# DocSync Report (weekly)" > docs/agile/report.md
            echo "" >> docs/agile/report.md
            echo "| Date (JST) | Event | Branch | equal | src_paths | tgt_paths | Run |" >> docs/agile/report.md
            echo "|---|---|---|---|---|---|---|" >> docs/agile/report.md
          fi

      - name: Build table row
        if: ${{ steps.artifacts.outputs.has_plan == 'true' }}
        id: row
        shell: python
        run: |
          import json, pathlib, datetime, os
          p = pathlib.Path('artifacts/doc_sync_plan.json')
          d = json.loads(p.read_text())
          stats = d.get('stats', {})
          equal = str(d.get('equal','unknown')).lower()
          src   = stats.get('src_paths','-')
          tgt   = stats.get('tgt_paths','-')
          jst   = datetime.timezone(datetime.timedelta(hours=9))
          date  = datetime.datetime.now(jst).strftime('%Y-%m-%d')
          run_url = f"{os.environ['GITHUB_SERVER_URL']}/{os.environ['GITHUB_REPOSITORY']}/actions/runs/{os.environ['GITHUB_RUN_ID']}"
          branch  = "${{ github.event.workflow_run.head_branch }}"
          open('row.txt','w',encoding='utf-8').write(
            f"| {date} | docsync-check | {branch} | {equal} | {src} | {tgt} | {run_url} |\n"
          )
      - name: Append to report.md
        if: ${{ steps.artifacts.outputs.has_plan == 'true' }}
        run: |
          cat row.txt >> docs/agile/report.md

      - name: Create GitHub App token
        if: ${{ steps.artifacts.outputs.has_plan == 'true' && secrets.GH_APP_ID != '' && secrets.GH_INSTALLATION_ID != '' && secrets.GH_APP_PRIVATE_KEY != '' }}
        id: app-token
        continue-on-error: true
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          installation-id: ${{ secrets.GH_INSTALLATION_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}

      - name: Create PR
        if: ${{ steps.artifacts.outputs.has_plan == 'true' }}
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ steps.app-token.outputs.token || secrets.GITHUB_TOKEN }}
          base: main
          branch: docs-sync/report-${{ github.event.workflow_run.id }}
          commit-message: "docs(report): append row to report.md [skip docsync]"
          title: "docs(report): append row to report.md [skip docsync]"
          body: "Automated append from docsync-aggregate."
          add-paths: |
            docs/agile/report.md
          labels: "docsync:needs-apply"
          delete-branch: true
