name: docs-index-validate

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: docs-index-validate-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: false

jobs:
  validate:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
    env:
      DOCSYNC_SKIP: ${{
        (github.event_name == 'pull_request' &&
          (startsWith(github.head_ref || '', 'docs-sync/') || contains(github.event.pull_request.title || '', '[skip docsync]')))
        || (github.event_name != 'pull_request' && startsWith(github.ref_name || '', 'docs-sync/'))
      }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Initialize diff gate for pull_request
        if: ${{ github.event_name == 'pull_request' }}
        run: echo "TARGET_HAS_CHANGES=false" >> $GITHUB_ENV

      - name: Initialize diff gate for main/dispatch
        if: ${{ github.event_name != 'pull_request' }}
        run: echo "TARGET_HAS_CHANGES=true" >> $GITHUB_ENV

      - name: Detect docs-related changes
        if: ${{ github.event_name == 'pull_request' && env.DOCSYNC_SKIP != 'true' }}
        id: detect
        run: |
          python scripts/detect_changed_files.py \
            --base "${{ github.event.pull_request.base.sha }}" \
            --patterns docs/** \
                       .github/workflows/docs-index-validate.yml \
                       scripts/docs_index_validate.py \
            --github-output "$GITHUB_OUTPUT" \
            --summary-title "docs-index diff gate"

      - name: Export diff result
        if: ${{ github.event_name == 'pull_request' && env.DOCSYNC_SKIP != 'true' }}
        run: echo "TARGET_HAS_CHANGES=${{ steps.detect.outputs.changed || 'false' }}" >> $GITHUB_ENV

      - name: DocSync automation guard
        if: ${{ env.DOCSYNC_SKIP == 'true' }}
        run: |
          echo "## docs-index-validate" >> $GITHUB_STEP_SUMMARY
          echo "- docs-sync branch or [skip docsync] title detected; skipping" >> $GITHUB_STEP_SUMMARY

      - name: Diff gate summary
        if: ${{ env.DOCSYNC_SKIP != 'true' && env.TARGET_HAS_CHANGES != 'true' }}
        run: |
          echo "## docs-index-validate" >> $GITHUB_STEP_SUMMARY
          echo "- diff gate: no matching docs files for pull_request" >> $GITHUB_STEP_SUMMARY

      - uses: actions/setup-python@v5
        if: ${{ env.DOCSYNC_SKIP != 'true' && env.TARGET_HAS_CHANGES == 'true' }}
        with:
          python-version: '3.11'

      - name: Validate docs index & links
        if: ${{ env.DOCSYNC_SKIP != 'true' && env.TARGET_HAS_CHANGES == 'true' }}
        run: |
          python scripts/docs_index_validate.py || EXIT=$?
          echo "exit_code=${EXIT:-0}" >> $GITHUB_OUTPUT
          exit ${EXIT:-0}

      - name: Write summary
        if: ${{ always() && env.DOCSYNC_SKIP != 'true' && env.TARGET_HAS_CHANGES == 'true' }}
        run: |
          echo "## DS-14 Report" >> $GITHUB_STEP_SUMMARY
          test -f docs_index_report.json && jq -r '
            "[件数] " + ( .issues|length|tostring ) + "\n" +
            ( .issues[0:10] | map("- " + .kind + ": " + .note) | join("\n") )
          ' docs_index_report.json >> $GITHUB_STEP_SUMMARY || echo "No report"

      - uses: actions/upload-artifact@v4
        if: ${{ always() && env.DOCSYNC_SKIP != 'true' && env.TARGET_HAS_CHANGES == 'true' }}
        with:
          name: ds14-report
          path: docs_index_report.json

  report-failure:
    needs: [validate]
    if: ${{ always() && github.event_name == 'pull_request' && !(startsWith(github.head_ref, 'docs-sync/')) && !(contains(github.event.pull_request.title, '[skip docsync]')) && failure() }}
    runs-on: ubuntu-latest
    permissions: { contents: read, pull-requests: write, issues: write }
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Report docs index failure
        uses: ./.github/actions/on-failure
        with:
          pr-number: ${{ github.event.pull_request.number }}
          labels: docs:invalid
          message: |
            ❌ docs-index-validate failed.
            Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  report-success:
    needs: [validate]
    if: ${{ always() && github.event_name == 'pull_request' && !(startsWith(github.head_ref, 'docs-sync/')) && !(contains(github.event.pull_request.title, '[skip docsync]')) && needs.validate.result == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            // docs:invalid の除去は pr-label-guard に委譲（競合回避）
            const { owner, repo } = context.repo;
            const pr = context.payload.pull_request.number;
            try {
              await github.rest.issues.removeLabel({ owner, repo, issue_number: pr, name: 'triage:urgent' });
            } catch (error) {
              core.info(`triage:urgent removal skipped: ${error?.status === 404 ? 'label absent' : error?.message || error}`);
            }
