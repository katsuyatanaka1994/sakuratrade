components:
  responses:
    problem_response:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/problem'
      description: Error
  schemas:
    alert:
      properties:
        alertId:
          type: integer
        targetPrice:
          type: number
        tradeId:
          type: integer
        triggeredAt:
          format: date-time
          type:
          - string
          - 'null'
        type:
          enum:
          - TP
          - SL
          type: string
      required:
      - alertId
      - tradeId
      - type
      - targetPrice
      type: object
    image:
      properties:
        imageId:
          type: integer
        s3Url:
          type: string
        thumbnailUrl:
          type: string
        tradeId:
          type: integer
        uploadedAt:
          format: date-time
          type: string
      required:
      - imageId
      - tradeId
      - s3Url
      - uploadedAt
      type: object
    pattern_result:
      properties:
        advice:
          type: string
        diagnosedAt:
          format: date-time
          type: string
        patternId:
          type: integer
        rule:
          type: string
        score:
          format: float
          type: number
        tradeId:
          type: integer
      required:
      - patternId
      - tradeId
      - rule
      - score
      - diagnosedAt
      type: object
    problem:
      properties:
        detail:
          type: string
        instance:
          type: string
        status:
          type: integer
        title:
          type: string
        type:
          type: string
      required:
      - type
      - title
      - status
      type: object
    trade:
      properties:
        enteredAt:
          format: date-time
          type: string
        exitedAt:
          format: date-time
          type:
          - string
          - 'null'
        priceIn:
          type: number
        priceOut:
          type:
          - number
          - 'null'
        side:
          enum:
          - LONG
          - SHORT
          type: string
        size:
          type: number
        ticker:
          type: string
        tradeId:
          type: integer
        userId:
          format: uuid
          type: string
      required:
      - tradeId
      - userId
      - ticker
      - side
      - priceIn
      - size
      - enteredAt
      type: object
    user:
      properties:
        email:
          format: email
          type: string
        plan:
          type: string
        role:
          type: string
        userId:
          format: uuid
          type: string
      required:
      - userId
      - email
      type: object
  securitySchemes:
    bearer_auth:
      bearerFormat: JWT
      scheme: bearer
      type: http
openapi: 3.1.0

info:
  description: REST API for sakuratrade (auth, trades, alerts, images, patterns, health)
  title: sakuratrade API
  version: 0.0.1
tags:
  - name: auth
    description: User authentication and registration
  - name: trades
    description: Trade resources and summaries
  - name: alerts
    description: Price alert resources for trades
  - name: images
    description: Chart image uploads and presigned URLs
  - name: patterns
    description: Pattern diagnostics and scoring
  - name: health
    description: Service status and readiness
paths:
  /alerts:
    post:
      summary: Create alert
      tags: [alerts]
      operationId: createAlert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/alert'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alert'
          description: Created alert
        default:
          $ref: '#/components/responses/problem_response'
  /alerts/{trade_id}:
    get:
      summary: List alerts for trade
      tags: [alerts]
      operationId: listTradeAlerts
      parameters:
      - in: path
        name: trade_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/alert'
                type: array
          description: Alert list
        default:
          $ref: '#/components/responses/problem_response'
  /auth/oauth:
    post:
      summary: Authenticate via OAuth
      tags: [auth]
      operationId: oauthLogin
      requestBody:
        content:
          application/json:
            schema:
              properties:
                provider_token:
                  type: string
              required:
              - provider_token
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  token:
                    type: string
                type: object
          description: JWT token
        default:
          $ref: '#/components/responses/problem_response'
      security: []
  /auth/register:
    post:
      summary: Register user account
      tags: [auth]
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  format: email
                  type: string
                password:
                  type: string
              required:
              - email
              - password
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: Registered
        default:
          $ref: '#/components/responses/problem_response'
      security: []
  /health:
    get:
      summary: Check service health
      tags: [health]
      operationId: getHealth
      responses:
        '200':
          description: OK
  /images:
    post:
      summary: Request image upload URL
      tags: [images]
      operationId: requestImageUpload
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tradeId:
                  type: integer
              required:
              - tradeId
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  s3Url:
                    type: string
                type: object
          description: Pre-signed URL
        default:
          $ref: '#/components/responses/problem_response'
  /patterns/{trade_id}:
    get:
      summary: Get pattern result for trade
      tags: [patterns]
      operationId: getPatternResult
      parameters:
      - in: path
        name: trade_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pattern_result'
          description: Pattern result
        default:
          $ref: '#/components/responses/problem_response'
  /trades:
    post:
      summary: Create trade
      tags: [trades]
      operationId: createTrade
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/trade'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trade'
          description: Created trade
        default:
          $ref: '#/components/responses/problem_response'
  /trades/{trade_id}:
    get:
      summary: Get trade bundle
      tags: [trades]
      operationId: getTradeBundle
      parameters:
      - in: path
        name: trade_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  pattern_result:
                    $ref: '#/components/schemas/pattern_result'
                  trade:
                    $ref: '#/components/schemas/trade'
                type: object
          description: Trade data
        default:
          $ref: '#/components/responses/problem_response'
security:
- bearer_auth: []
servers:
- description: Internal API
  url: /api/v1
